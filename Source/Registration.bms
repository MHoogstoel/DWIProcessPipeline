echo(${INPUTTYPE})
If( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )
  echo(${REGTYPE})
  If( ${REGTYPE} == 'FA' )
    Set( MOVING_IMAGE ${TEMPDIR}/${ROOTNAME}_DTI_FA.nrrd )
    Set( FLAG -f )
  EndIf( ${REGTYPE} == 'FA' )
  If( ${REGTYPE} == 'MD' )
    Set( FLAG -m )
    Set( MOVING_IMAGE ${TEMPDIR}/${ROOTNAME}_DTI_MD.nrrd )
  EndIf( ${REGTYPE} == 'MD' )
  echo ('Computation image to be registered')
  Set ( Cmd ${dtiprocessPATH} --dti_image ${DTI_DIR}/${DTImage} ${FLAG} ${MOVING_IMAGE} --scalar-float )
  echo( ${Cmd} )
  Run ( output ${Cmd} )
  echo( ${output} )
Else( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )
  Set( MOVING_IMAGE ${INPUTDIR}/${B0} )
EndIf( ${INPUTTYPE} == 'DWI' || ${INPUTTYPE} == 'DTI' )
echo('Histogram Matching')
GetFilename( MOVING_IMAGE_hm ${MOVING_IMAGE} NAME_WITHOUT_EXTENSION )
Set( MOVING_IMAGE_hm ${TEMPDIR}/${MOVING_IMAGE_hm}_hm.nrrd )

Set( HMCmd ${HistogramMatchingPATH} ${MOVING_IMAGE} ${TEMPLATEDIR}/${TEMPLATE} ${MOVING_IMAGE_hm} --numberOfHistogramLevels 1024 --numberOfMatchPoints 50 --threshold )
echo( ${HMCmd} )
Run( output ${HMCmd} )
echo( ${output} )

if(${InitialTransform} != '' )
  GetFilename( TRANSFORMEDIMAGE ${MOVING_IMAGE_hm} NAME_WITHOUT_EXTENSION )
  Set( TRANSFORMEDIMAGE ${TEMPDIR}/${TRANSFORMEDIMAGE}_transformed.nrrd )
#  Set( Cmd ${ResampleVolume2PATH} ${MOVING_IMAGE_hm} ${TRANSFORMEDIMAGE} -f ${InitialTransform} -R ${TEMPDIR}/initialGrid.nrrd )
  Set( Cmd ${ResampleVolume2PATH} ${MOVING_IMAGE_hm} ${TRANSFORMEDIMAGE} -f ${InitialTransform} -R ${Grid} )
  Run( output ${Cmd} )
  echo( ${output} )
  Set( MOVING_IMAGE_hm ${TRANSFORMEDIMAGE} )
#  Set( Grid ${TEMPDIR}/initialGrid.nrrd )
#else(${InitialTransform} != '' )
#  Set( Grid ${ImageGrid} )
endif(${InitialTransform} != '' )

If( ${SCALE} == TRUE )
  GetFilename( MOVING_IMAGE_ISO_SCALED ${MOVING_IMAGE_hm} NAME_WITHOUT_EXTENSION )
  if(${InitialTransform} == '' )
    Set( MOVING_IMAGE_ISO_SCALED ${TEMPDIR}/${MOVING_IMAGE_ISO_SCALED}_iso_scale.nrrd )
    Set( ResampleCmd ${ResampleVolume2PATH} ${MOVING_IMAGE_hm} ${MOVING_IMAGE_ISO_SCALED} -R ${Grid} )
    Run( output ${ResampleCmd} )
    echo( ${output} )
  else( ${InitialTransform} == '' )
    Set( MOVING_IMAGE_ISO_SCALED ${MOVING_IMAGE_hm} )
  endif(${InitialTransform} == '' )
  Set( ImageMathCmd ${ImageMathPATH} ${MOVING_IMAGE_ISO_SCALED} -changeSp 1,1,1 -outfile ${MOVING_IMAGE_ISO_SCALED} -type float)
  Run( output ${ImageMathCmd} )
  echo( ${output} )
  Set( FIXED ${ATLAS_ISO_SCALED} )
  Set( MOVING ${MOVING_IMAGE_ISO_SCALED} )
Else( ${SCALE} == TRUE )
  Set( FIXED ${TEMPLATEDIR}/${TEMPLATE} )
  Set( MOVING ${MOVING_IMAGE_hm} )
EndIf( ${SCALE} == TRUE )

if( ${SKULLSTRIP} == TRUE )
  include( MaskImage.bms )
  ##Apply mask
  GetFilename( MASKED_MOVING ${MOVING} NAME_WITHOUT_EXTENSION )
  Set( MASKED_MOVING ${TEMPDIR}/${MASKED_MOVING}_skullstripped.nrrd )
  Set( Cmd ${ImageMathPATH} ${MOVING} -mask ${TEMPDIR}/mask.nrrd -outfile ${MASKED_MOVING} -type float )
  Run( output ${Cmd} )
  echo( ${output} )
  Set( MOVING ${MASKED_MOVING} )
endif( ${SKULLSTRIP} == TRUE )
echo('Registration')
Set( RegCmd ${RegisterImagesPATH} ${FIXED} ${MOVING} --saveTransform ${TRANSFORMFILE} --sampleFromOverlap --registration PipelineRigid --resampledImage ${TEMPDIR}/ResampledImage.nrrd )
echo( ${RegCmd} )
Run( output ${RegCmd} )
echo( ${output} )
