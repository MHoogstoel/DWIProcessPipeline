FileExists( var ${OUTPUTDIR} )
If( ${var} == 0 )
  echo('Creation of the output directory: '${OUTPUTDIR})
  MakeDirectory( ${OUTPUTDIR} )
EndIf( ${var} == 0 )
FileExists( var ${TEMPDIR} )
If( ${var} == 0 )
  echo('Creation of the temporary directory: '${TEMPDIR})
  MakeDirectory( ${TEMPDIR} )
EndIf( ${var} == 0 )

If (${COMPUTEORIENTATION} == TRUE ) Then
  echo ('Computation of orientation transformation' )
  Set( ComputeOrientationCmd ${ManualImageOrientPATH} ${MANUALORIENTATION} LPS ${TEMPDIR}/${INPUT}_orientation.txt )
  Run (output ${ComputeOrientationCmd})
  echo(${output})
  If( ${INPUTTYPE} == 'DWI' )
      Set( ORIG_IMAGE ${DWImage} )
      Set( ORIENTED_IMAGE ${INPUT}_oriented.nrrd )
      Set( DWImage ${ORIENTED_IMAGE} )
      Set( CmdTool ResampleVolume2 )
  EndIf( ${INPUTTYPE} == 'DWI' )
  If( ${INPUTTYPE} == 'Scalar' )
      Set( ORIG_IMAGE ${B0} )
      Set( ORIENTED_IMAGE ${INPUT}_oriented.nrrd )
      Set( B0 ${ORIENTED_IMAGE} )
      Set( CmdTool ResampleVolume2 )
  EndIf( ${INPUTTYPE} == 'DWI' )
  If( ${INPUTTYPE} == 'DTI' )
      Set( ORIG_IMAGE ${DTImage} )
      Set( ORIENTED_IMAGE ${INPUT}_oriented.nrrd )
      Set( DTImage ${ORIENTED_IMAGE} )
      Set( CmdTool ResampleDTI )
  EndIf( ${INPUTTYPE} == 'DTI' )
  Set( GRID ${TEMPDIR}/${INPUT}_orientation_grid.nrrd )
  Set( GridCmd ${ITKTransformToolsPATH} size ${INPUTDIR}/${ORIG_IMAGE} ${TEMPDIR}/${INPUT}_orientation.txt --grid ${GRID} )
  Run( output ${GridCmd} )
  Echo( ${output} )
  Set( Cmd ${CmdTool} ${INPUTDIR}/${ORIG_IMAGE} ${OUTPUTDIR}/${ORIENTED_IMAGE} -f ${TEMPDIR}/${INPUT}_orientation.txt -R ${GRID} )
  Run( output ${Cmd} )
  Echo( ${output} )
  Set( INPUTDIR ${OUTPUTDIR} )
  Set( DTI_DIR ${OUTPUTDIR} )
EndIf (${COMPUTEORIENTATION})


If( ${INPUTTYPE} == 'DWI' )
  If (${CREATEB0} == TRUE ) Then
    echo ('Creation of the B0 image' )
    Set (CreateB0Cmd ${dtiestimPATH} --dwi_image ${INPUTDIR}/${DWImage} --tensor_output ${TEMPDIR}/${DTImage} --B0 ${OUTPUTDIR}/${B0} )
    Run (output ${CreateB0Cmd})
    Echo (${output})
  EndIf (${CREATEB0})
  echo ('Creation of the DTI' )
  Set( MASK ${INPUT}_mask.nrrd )
  Set( BASELINE ${INPUT}_baseline.nrrd )
  Set (GenerateDTICmd DiffusionTensorEstimation ${INPUTDIR}/${DWImage} --removeislands -o 0 -e WLS ${OUTPUTDIR}/${DTImage} ${TEMPDIR}/${BASELINE} ${TEMPDIR}/${MASK} )
  Run (output ${GenerateDTICmd})
  Echo (${output})
  If (${CREATEIDWI} == TRUE ) Then
    echo ('Creation of the IDWI' )
    Set (GenerateIDWICmd ${dtiestimPATH} --dwi_image ${INPUTDIR}/${DWImage} --tensor_output ${TEMPDIR}/${DTImage} --idwi ${OUTPUTDIR}/${IDWImage} )
    Run (output ${GenerateIDWICmd})
    Echo (${output})
  EndIf (${CREATEIDWI})
EndIf( ${INPUTTYPE} == 'DWI' )

